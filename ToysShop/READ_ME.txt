
Проект выполнен в соответствии с паттерном MVP. точка входа - main.java. 
Старался использовать шаблоны проектирования группы GoF("дробить" функционал по классам и т.д.)
Пользовательский интерфейс - консоль.
Главное меню "жестко" связано с пользовательским вводом через отдельные классы(пакет Menu_Commands), наследующие интерфейс Options.java.
Ошибки консольного ввода и работы с файлами обработаны Try-Catch.

Игрушка - объект класса Toy(поля соответствуют ТЗ).
Ассортимент магазина в наличии - объект класса Shop(поле max_id(Integer) ; поле toys(список объектов Toy) ; поле quantity(Integer - 
   общее кол-во всх игрушек в магазине - сумма полей quantity каждого объкта Toy из списка Shop.toys, необходимо для корректной
   организации Random выбора игрушки в призовой фонд (из общего кол-ва всех позиций в магазине)). Итератор описан My_iterator.java.
   Данный класс сделан параметризованным, чтобы, при необходимости, работать с "наследниками" класса Toy, если, например, понадобятся
   доп.поля.

Для начала работы, необходимо сформировать ассортимент магазина, добавлением игрушек(Toy - п.2 меню).

Меню :

1. Выводится список позиций в ассортименте.
2. Добавляется позиция в ассортимент наличия в магазине. Вносится название и кол-во позиции (id формируется автомат, как Shop.max_id+1;       %попадания в приз.фонд по умолчанию(double "weight"), на этом этапе - 0%).
3. Редактируется позиция, существующая в ассортименте магазина, пользователь, на выбор изменяет заголовок и кол-во 
   в наличии(или все сразу). Id и вес в призовом фонде остаются прежними.
4. Позиция удаляется из ассортимента после подтверждения. Если на момент удаления из ассортимента, она присутствует в приз. фонде - не удалится(сначала придется раздать или вернуть из приз.фонда в ассортимент магазина)
5. Формируется призовой фонд в кол-ве, заданном пользователем.   

   В первом цикле Bonus_list.create формируется список(int quantity_list) колличеств каждой позиции(Toy) в ассортименте.
   
   Во втором цикле Bonus_list.create выбирается (Random) еденица игрушки из "общей кучи".
	Во вложенном цикле While определяется принадлежность выбранной еденицы к конкретной позиции(Toy) через перебор quantity_list
	по quantity каждой позиции ассортимента. (J-1) = Toy.id.
	Если кол-во данной позиции в ассортименте>0 - она добавляется в список массивов(int) bonus_list[id(j-1),1] в кол-ве 1шт.

   В третьем цикле Bonus_list.create формируется список массивов (int mod_bonus_list) в котором содержатся просуммированные 
	по совпадениям id bonus	элементы списка _list.

   В четвертом цикле Bonus_list.create формируется список объектов(Toy), попавших в призовой фонд res_bonus_list(Toy). Вычисляется
	удельный каждой позиции ассортимента в призовом фонде.

   Методом Shop.correct_of_bonus корректируется кол-во в позициях списка Ассортимента на величины, выбывшие в приз.фонд.
   Статистика попадания в призовой фонд теперь отображается и при выводе Ассортимента.

6. Выводится список позиций призового фонда (не розданных  - в наличии), сортированный по убыванию %частоты попадания в приз.фонд.
   Компаратор для сортировки описан Toy_comparator, наследующим интерфейс Comparator.

7. Призовой фонд возвращается в ассортимент(наличие для продаж), статистика попадания позиций ассортимента в приз.фонд сохраняется..

8. Из призового фонда(при наличии) выдается приз. Кол-во в приз.фонде уменьшается. Запись о выданном призе добавляется в gived.txt.
9. Очищается содержимое файла gived.txt.
10. Завершить работу.

С уважением, Константин Гуменников.